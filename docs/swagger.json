{
    "swagger": "2.0",
    "info": {
        "title": "User Chat App API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/refresh": {
            "post": {
                "description": "Refreshes the user's access token by verifying the refresh token from the user's cookies. If the token is valid, a new access token and refresh token are issued to continue the user's session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Authentication Token",
                "responses": {
                    "200": {
                        "description": "Tokens refreshed successfully with a new access token",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid refresh token or missing refresh token in cookies",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "404": {
                        "description": "User session not found",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error while refreshing token or verifying refresh token",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Logs in a user by accepting a SignInInput JSON with the user's email and password. If the credentials are correct and the email is verified, an access token and a refresh token are returned for subsequent authentication requests.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Signin",
                "parameters": [
                    {
                        "description": "User Signin Input",
                        "name": "signinInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful with access token and refresh token",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials or email not verified",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error while verifying user or generating tokens",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Registers a new user by accepting a SignupInput JSON with first name, last name, email, and password. If successful, a verification code is sent to the user's email for confirmation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Signup",
                "parameters": [
                    {
                        "description": "User Signup Input",
                        "name": "signupInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully with a verification code sent to the email",
                        "schema": {
                            "$ref": "#/definitions/handlers.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request due to incorrect or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "409": {
                        "description": "Email already exists",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error while creating user or sending verification code",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "Verifies the user's email using the provided user ID and verification code. If the code matches, the user's email is marked as verified and they can access restricted areas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Email Verification",
                "parameters": [
                    {
                        "description": "User Email Verification Input",
                        "name": "verifyParams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VerifyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request due to empty or invalid code",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error while verifying code or updating user status",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetches the user's profile information using the ID extracted from the JWT access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthResponse": {
            "description": "Response structure for access token",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "handlers.SignInInput": {
            "description": "Input structure for user login",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                }
            }
        },
        "handlers.SignUpInput": {
            "description": "Input structure for user signup",
            "type": "object",
            "required": [
                "email",
                "firstname",
                "lastname",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                }
            }
        },
        "handlers.SignUpResponse": {
            "description": "Response structure for userId",
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.UserProfileResponse": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "last_online": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.VerifyParams": {
            "description": "Input structure for verification",
            "type": "object",
            "required": [
                "code",
                "user_id"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.Response": {
            "description": "Response structure for messages",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}